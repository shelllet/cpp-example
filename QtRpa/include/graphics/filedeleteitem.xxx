#pragma once
#include "graphics/elementitem.h"
#include "common.hpp"
#include "properties.hpp"
#include "qgraphicswidget.h"
namespace shelllet {
	namespace graphics {
		class FileDeletePrivate;
		class FileDelete : public ElementItem {
			Q_OBJECT
				Q_DECLARE_PRIVATE_D(Object::d_ptr, FileDelete)
		public:
			Q_INVOKABLE	FileDelete(const std::shared_ptr<CompositeProperty>& property, QGraphicsItem* parent = 0);

			void paintWindowFrame(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget = nullptr) override;


			void paint(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget = nullptr) override;

		protected:



			QSizeF sizeHint(Qt::SizeHint which, const QSizeF& constraint = QSizeF()) const override;

		private:

		};
	}
}
Q_DECLARE_METATYPE(shelllet::graphics::FileDelete*)